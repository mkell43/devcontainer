name: Godev:Build

on:
  push:
    branches:
      - "main"
    tags:
      - "v*.*.*"
    paths:
      - "godev/**"
      - ".github/godev_build.yaml"
  pull_request:
    branches:
      - "main"
    paths:
      - "godev/**"
      - ".github/godev_build.yaml"
  workflow_dispatch:

env:
  PLATFORMS: linux/amd64,linux/arm64
  TEST_TAG: mkell43/godev:test

jobs:
  build:
    strategy:
      matrix:
        arch: [linux/amd64, linux/arm64]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Is Release
        id: is-release
        run: |
          if [[ ${{ github.ref_name }} =~ ^release\/godev\/v\d.\d.\d$ ]]; then
            echo ::set-output name=release::true
          fi

      - name: Login to Docker Hub
        if: github.branch == 'main' || contains(github.ref_name, 'godev/v')
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Docker meta
        id: meta
        # if: github.branch == 'main'
        if: steps.is-release.outputs.release == 'true'
        uses: docker/metadata-action@v4
        with:
          images: |
            ${{ secrets.DOCKERHUB_USERNAME }}/godev
          tags: |
            type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', 'main') }}
            type=ref,event=pr
            type=match,pattern=godev/v(\d.\d.\d),group=1

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      # - name: Build Test
      #   if: github.branch != 'main'
      #   uses: docker/build-push-action@v3
      #   with:
      #     context: ./godev/
      #     platforms: ${{ matrix.arch }}
      #     load: true
      #     tags: ${{ env.TEST_TAG }}

      # - name: Test
      #   if: github.branch != 'main'
      #   run: |
      #     docker run --rm ${{ env.TEST_TAG }}

      - name: Build and push
        # if: github.branch == 'main' || contains(github.ref_name, 'godev/v')
        if: github.branch == 'main' || steps.is-release.outputs.release == 'true'
        uses: docker/build-push-action@v3
        with:
          context: ./godev/
          file: ./godev/Dockerfile
          platforms: ${{ matrix.arch }}
          builder: ${{ steps.buildx.outputs.name }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            CREATED=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.created'] }}
            VERSION=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.version'] }}
            REVISION=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.revision'] }}
          cache-from: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/godev:buildcache
          cache-to: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/godev:buildcache,mode=max
